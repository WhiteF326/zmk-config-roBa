#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ml: ml {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "ML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E         &kp R  &kp T                                &kp Y      &kp U  &lt 0 I    &kp O       &kp P
&kp A             &kp S           &kp D         &kp F  &kp G  &kp TAB        &kp BACKSPACE  &kp H      &kp J  &kp K      &kp L       &kp ENTER
&kp Z             &kp X           &kp C         &kp V  &kp B  &kp TAB        &kp SEMICOLON  &kp N      &kp M  &kp COMMA  &kp PERIOD  &kp LCTRL
&kp LEFT_COMMAND  &kp LEFT_SHIFT  &kp LEFT_ALT  &mo 1  &mo 2  &kp LANG2      &kp LANG1      &kp SPACE                                &sl 3
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        number_kigou {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                         &kp NUMBER_6      &kp N7             &kp N8         &kp NUMBER_9      &kp NUMBER_0
&trans        &mkp MB1      &mkp MB3      &mkp MB2      &trans  &trans      &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp MINUS         &kp EQUAL
&trans        &trans        &trans        &trans        &trans  &trans      &trans     &trans            &trans             &kp SLASH      &kp SINGLE_QUOTE  &trans
&trans        &trans        &trans        &trans        &trans  &trans      &trans     &trans                                                                &trans
            >;
        };

        actions {
            bindings = <
&kp ESC         &kp UP_ARROW    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE                                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT          &trans           &trans      &trans             &trans            &trans        &trans        &trans        &kp F11       &kp F12
&kp F1          &kp F2          &kp F3             &kp F4           &kp F5      &kp LG(LA(L))      &kp LC(UP_ARROW)  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&trans          &trans          &trans             &trans           &trans      &bootloader        &kp LEFT_COMMAND  &trans                                                  &trans
            >;
        };

        mousekey {
            bindings = <
&trans          &mmv MOVE_UP    &trans           &msc SCRL_UP    &trans                      &trans  &trans  &trans  &trans  &trans
&mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans          &trans           &trans          &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans          &trans           &trans          &trans  &trans      &trans  &trans                          &sl 0
            >;
        };
    };
};
